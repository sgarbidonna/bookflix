{"ast":null,"code":"/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\nvar dateFormat = function () {\n  var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZW]|\"[^\"]*\"|'[^']*'/g,\n      timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n      timezoneClip = /[^-+\\dA-Z]/g,\n      pad = function (val, len) {\n    val = String(val);\n    len = len || 2;\n\n    while (val.length < len) val = \"0\" + val;\n\n    return val;\n  },\n\n  /**\n   * Get the ISO 8601 week number\n   * Based on comments from\n   * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n   */\n  getWeek = function (date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate()); // Change date to Thursday same week\n\n    targetThursday.setDate(targetThursday.getDate() - (targetThursday.getDay() + 6) % 7 + 3); // Take January 4th as it is always in week 1 (see ISO 8601)\n\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4); // Change date to Thursday same week\n\n    firstThursday.setDate(firstThursday.getDate() - (firstThursday.getDay() + 6) % 7 + 3); // Check if daylight-saving-time-switch occured and correct for it\n\n    var ds = targetThursday.getTimezoneOffset() / firstThursday.getTimezoneOffset() - 1;\n    targetThursday.setHours(targetThursday.getHours() + ds); // Number of weeks between target Thursday and first Thursday\n\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + weekDiff;\n  }; // Regexes and supporting functions are cached through closure\n\n\n  return function (date, mask, utc) {\n    var dF = dateFormat; // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n\n    if (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\n      mask = date;\n      date = undefined;\n    }\n\n    date = date || new Date();\n\n    if (!(date instanceof Date)) {\n      date = new Date(date);\n    }\n\n    if (isNaN(date)) {\n      throw TypeError(\"Invalid date\");\n    }\n\n    mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]); // Allow setting the utc argument via the mask\n\n    if (mask.slice(0, 4) == \"UTC:\") {\n      mask = mask.slice(4);\n      utc = true;\n    }\n\n    var _ = utc ? \"getUTC\" : \"get\",\n        d = date[_ + \"Date\"](),\n        D = date[_ + \"Day\"](),\n        m = date[_ + \"Month\"](),\n        y = date[_ + \"FullYear\"](),\n        H = date[_ + \"Hours\"](),\n        M = date[_ + \"Minutes\"](),\n        s = date[_ + \"Seconds\"](),\n        L = date[_ + \"Milliseconds\"](),\n        o = utc ? 0 : date.getTimezoneOffset(),\n        W = getWeek(date),\n        flags = {\n      d: d,\n      dd: pad(d),\n      ddd: dF.i18n.dayNames[D],\n      dddd: dF.i18n.dayNames[D + 7],\n      m: m + 1,\n      mm: pad(m + 1),\n      mmm: dF.i18n.monthNames[m],\n      mmmm: dF.i18n.monthNames[m + 12],\n      yy: String(y).slice(2),\n      yyyy: y,\n      h: H % 12 || 12,\n      hh: pad(H % 12 || 12),\n      H: H,\n      HH: pad(H),\n      M: M,\n      MM: pad(M),\n      s: s,\n      ss: pad(s),\n      l: pad(L, 3),\n      L: pad(L > 99 ? Math.round(L / 10) : L),\n      t: H < 12 ? \"a\" : \"p\",\n      tt: H < 12 ? \"am\" : \"pm\",\n      T: H < 12 ? \"A\" : \"P\",\n      TT: H < 12 ? \"AM\" : \"PM\",\n      Z: utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n      o: (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n      S: [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n      W: W\n    };\n\n    return mask.replace(token, function ($0) {\n      return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n    });\n  };\n}(); // Some common format strings\n\n\ndateFormat.masks = {\n  \"default\": \"ddd mmm dd yyyy HH:MM:ss\",\n  shortDate: \"m/d/yy\",\n  mediumDate: \"mmm d, yyyy\",\n  longDate: \"mmmm d, yyyy\",\n  fullDate: \"dddd, mmmm d, yyyy\",\n  shortTime: \"h:MM TT\",\n  mediumTime: \"h:MM:ss TT\",\n  longTime: \"h:MM:ss TT Z\",\n  isoDate: \"yyyy-mm-dd\",\n  isoTime: \"HH:MM:ss\",\n  isoDateTime: \"yyyy-mm-dd'T'HH:MM:ss\",\n  isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\n}; // Internationalization strings\n\ndateFormat.i18n = {\n  dayNames: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  monthNames: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n};\n/*\n// For convenience...\nDate.prototype.format = function (mask, utc) {\n\treturn dateFormat(this, mask, utc);\n};\n*/\n\nif (typeof exports !== \"undefined\") {\n  module.exports = dateFormat;\n}","map":{"version":3,"sources":["D:/Documentos/GitHub/bookflix/bookflix/front-end/node_modules/dateformat/lib/dateformat.js"],"names":["dateFormat","token","timezone","timezoneClip","pad","val","len","String","length","getWeek","date","targetThursday","Date","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","getTimezoneOffset","setHours","getHours","weekDiff","mask","utc","dF","arguments","Object","prototype","toString","call","test","undefined","isNaN","TypeError","masks","slice","_","d","D","m","y","H","M","s","L","o","W","flags","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","exports","module"],"mappings":"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","sourcesContent":["/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nvar dateFormat = function () {\n\tvar\ttoken = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZW]|\"[^\"]*\"|'[^']*'/g,\n\t\ttimezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n\t\ttimezoneClip = /[^-+\\dA-Z]/g,\n\t\tpad = function (val, len) {\n\t\t\tval = String(val);\n\t\t\tlen = len || 2;\n\t\t\twhile (val.length < len) val = \"0\" + val;\n\t\t\treturn val;\n\t\t},\n    /**\n     * Get the ISO 8601 week number\n     * Based on comments from\n     * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n     */\n    getWeek = function (date) {\n      // Remove time components of date\n      var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n      // Change date to Thursday same week\n      targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n      // Take January 4th as it is always in week 1 (see ISO 8601)\n      var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n      // Change date to Thursday same week\n      firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n      // Check if daylight-saving-time-switch occured and correct for it\n      var ds = targetThursday.getTimezoneOffset()/firstThursday.getTimezoneOffset()-1;\n      targetThursday.setHours(targetThursday.getHours()+ds);\n\n      // Number of weeks between target Thursday and first Thursday\n      var weekDiff = (targetThursday - firstThursday) / (86400000*7);\n      return 1 + weekDiff;\n    };\n\n\t// Regexes and supporting functions are cached through closure\n\treturn function (date, mask, utc) {\n\t\tvar dF = dateFormat;\n\n\t\t// You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n\t\tif (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\n\t\t\tmask = date;\n\t\t\tdate = undefined;\n\t\t}\n\n\t\tdate = date || new Date;\n\n    if(!(date instanceof Date)) {\n      date = new Date(date);\n    }\n\n    if (isNaN(date)) {\n      throw TypeError(\"Invalid date\");\n    }\n\n\t\tmask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\n\n\t\t// Allow setting the utc argument via the mask\n\t\tif (mask.slice(0, 4) == \"UTC:\") {\n\t\t\tmask = mask.slice(4);\n\t\t\tutc = true;\n\t\t}\n\n\t\tvar\t_ = utc ? \"getUTC\" : \"get\",\n\t\t\td = date[_ + \"Date\"](),\n\t\t\tD = date[_ + \"Day\"](),\n\t\t\tm = date[_ + \"Month\"](),\n\t\t\ty = date[_ + \"FullYear\"](),\n\t\t\tH = date[_ + \"Hours\"](),\n\t\t\tM = date[_ + \"Minutes\"](),\n\t\t\ts = date[_ + \"Seconds\"](),\n\t\t\tL = date[_ + \"Milliseconds\"](),\n\t\t\to = utc ? 0 : date.getTimezoneOffset(),\n\t\t\tW = getWeek(date),\n\t\t\tflags = {\n\t\t\t\td:    d,\n\t\t\t\tdd:   pad(d),\n\t\t\t\tddd:  dF.i18n.dayNames[D],\n\t\t\t\tdddd: dF.i18n.dayNames[D + 7],\n\t\t\t\tm:    m + 1,\n\t\t\t\tmm:   pad(m + 1),\n\t\t\t\tmmm:  dF.i18n.monthNames[m],\n\t\t\t\tmmmm: dF.i18n.monthNames[m + 12],\n\t\t\t\tyy:   String(y).slice(2),\n\t\t\t\tyyyy: y,\n\t\t\t\th:    H % 12 || 12,\n\t\t\t\thh:   pad(H % 12 || 12),\n\t\t\t\tH:    H,\n\t\t\t\tHH:   pad(H),\n\t\t\t\tM:    M,\n\t\t\t\tMM:   pad(M),\n\t\t\t\ts:    s,\n\t\t\t\tss:   pad(s),\n\t\t\t\tl:    pad(L, 3),\n\t\t\t\tL:    pad(L > 99 ? Math.round(L / 10) : L),\n\t\t\t\tt:    H < 12 ? \"a\"  : \"p\",\n\t\t\t\ttt:   H < 12 ? \"am\" : \"pm\",\n\t\t\t\tT:    H < 12 ? \"A\"  : \"P\",\n\t\t\t\tTT:   H < 12 ? \"AM\" : \"PM\",\n\t\t\t\tZ:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n\t\t\t\to:    (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n\t\t\t\tS:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n\t\t\t\tW:    W\n\t\t\t};\n\n\t\treturn mask.replace(token, function ($0) {\n\t\t\treturn $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n\t\t});\n\t};\n}();\n\n// Some common format strings\ndateFormat.masks = {\n\t\"default\":      \"ddd mmm dd yyyy HH:MM:ss\",\n\tshortDate:      \"m/d/yy\",\n\tmediumDate:     \"mmm d, yyyy\",\n\tlongDate:       \"mmmm d, yyyy\",\n\tfullDate:       \"dddd, mmmm d, yyyy\",\n\tshortTime:      \"h:MM TT\",\n\tmediumTime:     \"h:MM:ss TT\",\n\tlongTime:       \"h:MM:ss TT Z\",\n\tisoDate:        \"yyyy-mm-dd\",\n\tisoTime:        \"HH:MM:ss\",\n\tisoDateTime:    \"yyyy-mm-dd'T'HH:MM:ss\",\n\tisoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n\tdayNames: [\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\n\t\t\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n\t],\n\tmonthNames: [\n\t\t\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n\t\t\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t]\n};\n\n/*\n// For convenience...\nDate.prototype.format = function (mask, utc) {\n\treturn dateFormat(this, mask, utc);\n};\n*/\n\nif (typeof exports !== \"undefined\") {\n  module.exports = dateFormat;\n}\n"]},"metadata":{},"sourceType":"script"}