{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\GitHub\\\\bookflix\\\\bookflix\\\\front-end\\\\src\\\\components\\\\Suscriptores\\\\IniciarSesion.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nconst login = 'http://localhost:4000/api/suscriptores/login';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.getErrors = err => {\n      //traigo la data de los errores\n      const {\n        data\n      } = err;\n      alert(data);\n    };\n\n    this.getToken = res => {\n      //pido la data de la respuesta  \n      const {\n        data\n      } = res;\n      const {\n        user,\n        token\n      } = data; //guardo el token en session storage\n      //paso el Json a string y lo guardo en sesion storage\n\n      sessionStorage.setItem('token', JSON.stringify({\n        token\n      }));\n      sessionStorage.setItem('user', JSON.stringify({\n        user\n      })); // token tiene un objeto que contiene el token\n      // para acceder al token:\n      // const { token } = this.state.token || \n      // para tarer en token de sesion storage: const { token } = JSON.parse(sessionStorage.getItem(\"token\")\n      // lo mismo para user\n\n      this.setState({\n        token: JSON.parse(sessionStorage.getItem(\"token\")),\n        user: JSON.parse(sessionStorage.getItem(\"user\"))\n      });\n      console.log(\"user:\");\n      console.log(JSON.parse(sessionStorage.getItem(\"user\")));\n      console.log(\"token:\");\n      console.log(JSON.parse(sessionStorage.getItem('token')));\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      token: '',\n      user: null\n    };\n    this.iniciarSesion = this.iniciarSesion.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  async iniciarSesion(event) {\n    console.log(this.state);\n    event.preventDefault();\n    await axios.post(login, {\n      email: this.state.email,\n      password: this.state.password\n    }).then(res => this.getToken(res)).catch(err => this.getErrors(err.response));\n  }\n\n  //faltan los setState, y no funca el POST\n  render() {\n    return (//verifico si existe el token\n      !this.state.token && !this.state.user ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-6 offset-md-3 form-login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card card-body bg-dark  text-light \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.iniciarSesion,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"text-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"email\",\n        name: \"email\",\n        onChange: this.onInputChange,\n        value: this.state.email,\n        placeholder: \"Ingrese un email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"text-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, \"Contrase\\xF1a\"), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        id: \"password\",\n        name: \"password\",\n        onChange: this.onInputChange,\n        value: this.state.password,\n        placeholder: \"Ingrese la contrase\\xF1a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-danger btn-lg btn-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, \"LOGIN\")))))) : /*#__PURE__*/React.createElement(Redirect, {\n        from: \"/login\",\n        to: \"/home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      })\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Documentos/GitHub/bookflix/bookflix/front-end/src/components/Suscriptores/IniciarSesion.js"],"names":["React","Component","axios","BrowserRouter","Router","Route","Redirect","login","App","constructor","getErrors","err","data","alert","getToken","res","user","token","sessionStorage","setItem","JSON","stringify","setState","parse","getItem","console","log","onInputChange","event","target","name","value","state","email","password","iniciarSesion","bind","preventDefault","post","then","catch","response","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Route , Redirect } from 'react-router-dom';\r\n\r\nconst login = 'http://localhost:4000/api/suscriptores/login';\r\n\r\n\r\n\r\n   \r\n\r\nclass App extends Component {\r\n    \r\n    constructor (){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password:'',\r\n            token:'',\r\n            user:null,\r\n      };\r\n        this.iniciarSesion = this.iniciarSesion.bind(this);\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n\r\n    }\r\n    getErrors=(err)=>{\r\n        //traigo la data de los errores\r\n        const {data} = err;\r\n        alert(data);\r\n        \r\n       \r\n        \r\n    }\r\n\r\n    getToken=(res)=>{\r\n        //pido la data de la respuesta  \r\n        const { data } = res;\r\n        const { user, token}= data;        \r\n        //guardo el token en session storage\r\n        //paso el Json a string y lo guardo en sesion storage\r\n        sessionStorage.setItem('token', JSON.stringify( {token} ) );\r\n        sessionStorage.setItem('user', JSON.stringify( {user} ) );\r\n        // token tiene un objeto que contiene el token\r\n        // para acceder al token:\r\n        // const { token } = this.state.token || \r\n        // para tarer en token de sesion storage: const { token } = JSON.parse(sessionStorage.getItem(\"token\")\r\n        // lo mismo para user\r\n        this.setState(\r\n            {\r\n                token: JSON.parse(sessionStorage.getItem(\"token\")),\r\n                user: JSON.parse(sessionStorage.getItem(\"user\")),\r\n            }\r\n        );\r\n        console.log(\"user:\");    \r\n        console.log(JSON.parse(sessionStorage.getItem(\"user\")));   \r\n        console.log(\"token:\");    \r\n        console.log(JSON.parse(sessionStorage.getItem('token')));\r\n            \r\n    }\r\n\r\n    async iniciarSesion(event){\r\n\r\n        console.log(this.state);\r\n        event.preventDefault();   \r\n        await axios.post(login,{\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        })\r\n                .then(res =>this.getToken(res))\r\n                .catch(err => this.getErrors(err.response));\r\n        \r\n    }\r\n\r\n    \r\n    onInputChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    };\r\n    \r\n\r\n//faltan los setState, y no funca el POST\r\n    render(){\r\n        return (\r\n        //verifico si existe el token\r\n        !this.state.token && !this.state.user?\r\n        <div>\r\n\r\n        <div className=\"col-md-6 offset-md-3 form-login\">\r\n            <div className=\"card card-body bg-dark  text-light \" >\r\n\r\n                <form onSubmit={this.iniciarSesion}>\r\n                    <div className=\"form-group\">\r\n                    <label className=\"text-light\">Email\r\n                    </label>\r\n                    <input \r\n                        className=\"form-control\" \r\n                        id=\"email\" \r\n                        name =\"email\"\r\n                        onChange={this.onInputChange}\r\n                        value={this.state.email}\r\n\r\n                        placeholder=\"Ingrese un email\">\r\n                    </input>    \r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label className=\"text-light\">Contraseña\r\n                    </label>\r\n                    <input \r\n                        className=\"form-control\" \r\n                        id=\"password\" \r\n                        name =\"password\"\r\n                        onChange={this.onInputChange}\r\n                        value={this.state.password}\r\n                        placeholder=\"Ingrese la contraseña\">\r\n                    </input>    \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button  type=\"submit\" className=\"btn btn-danger btn-lg btn-block\">\r\n                            LOGIN\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>   \r\n            \r\n        </div>\r\n        </div>\r\n          \r\n        :\r\n        <Redirect\r\n        from=\"/login\"\r\n        to=\"/home\" />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App; "]},"metadata":{},"sourceType":"module"}