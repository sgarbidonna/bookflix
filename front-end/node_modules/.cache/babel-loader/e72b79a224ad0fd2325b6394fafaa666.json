{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\GitHub\\\\bookflix\\\\bookflix\\\\front-end\\\\src\\\\components\\\\VistaAdmin\\\\Libros\\\\CargarMetadataLibro.js\";\nimport React, { Component } from '../../../../node_modules/react';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from '../../../../node_modules/react-datepicker';\nimport '../../../../node_modules/react-datepicker/dist/react-datepicker.css';\nimport axios from '../../../../node_modules/axios';\nconst autores = 'http://localhost:4000/api/autores/';\nconst generos = 'http://localhost:4000/api/generos/';\nconst editoriales = 'http://localhost:4000/api/editoriales/';\nconst libros = 'http://localhost:4000/api/libros/cargar';\nexport default class CargarMetadata extends Component {\n  constructor() {\n    super();\n\n    this.getData = async () => {\n      await axios.get(autores, {\n        headers: {\n          'xaccess': this.state.token\n        }\n      }).then(res => {\n        this.setAutores(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      await axios.get(generos, {\n        headers: {\n          'xaccess': this.state.token\n        }\n      }).then(res => {\n        this.setGeneros(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      await axios.get(editoriales, {\n        headers: {\n          'xaccess': this.state.token\n        }\n      }).then(res => {\n        this.setEditoriales(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      /*\r\n      if(this.state.fechaDePublicacion < this.state.fechaDeHoy){\r\n          return alert('La fecha de publicaciÃ³n no debe ser menor a la fecha actual')\r\n      }\r\n      if(this.state.fechaDeExpiracion !=''){\r\n          \r\n          if(this.state.fechaDeExpiracion < this.state.fechaDePublicacion){\r\n              return alert('La fecha de expiracion debe ser mayor a la de publicacion')\r\n              \r\n          }\r\n      }\r\n      */\n\n      const formData = new FormData();\n      formData.append('titulo', this.state.titulo);\n      formData.append('isbn', this.state.ISBN);\n      formData.append('autor', this.state.autor);\n      formData.append('editorial', this.state.editorial);\n      formData.append('genero', this.state.genero); //formData.append('lanzamiento', this.state.fechaDePublicacion);\n\n      formData.append('portadaImg', this.state.portadaImg); //formData.append('expiracion',this.state.fechaDeExpiracion)\n\n      axios.post(libros, formData, {\n        headers: {\n          'xaccess': this.state.token\n        }\n      }).then(res => {\n        alert(JSON.stringify(res.data));\n      }).catch(err => {\n        alert(JSON.stringify(err.response.data.msg));\n      });\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onChangeFechaDePublicacion = fechaDePublicacion => {\n      this.setState({\n        fechaDePublicacion\n      });\n    };\n\n    this.onChangeFechaDeExpiracion = fechaDeExpiracion => {\n      this.setState({\n        fechaDeExpiracion\n      });\n    };\n\n    this.state = {\n      token: sessionStorage.getItem('token'),\n      titulo: '',\n      ISBN: '',\n      portadaImg: null,\n      autor: '',\n      editorial: '',\n      genero: '',\n      //fechaDeExpiracion: '', \n      //fechaDePublicacion: '', \n      //fechaDeHoy: new Date(),\n      generos: [],\n      autores: [],\n      editoriales: []\n    };\n    this.getPortada = this.getPortada.bind(this);\n    this.onChangeFechaDePublicacion = this.onChangeFechaDePublicacion.bind(this);\n    this.onChangeFechaDeExpiracion = this.onChangeFechaDeExpiracion.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.setAutores = this.setAutores.bind(this);\n  }\n\n  setAutores(res) {\n    this.setState({\n      autores: res\n    });\n  }\n\n  setGeneros(res) {\n    this.setState({\n      generos: res\n    });\n  }\n\n  setEditoriales(res) {\n    this.setState({\n      editoriales: res\n    });\n  }\n\n  async componentDidMount() {\n    this.getData();\n  }\n\n  getPortada(e) {\n    this.setState({\n      portadaImg: e.target.files[0]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-novedad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body text-light bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"exampleFormControlInput1\",\n      name: \"titulo\",\n      onChange: this.onInputChange,\n      value: this.state.titulo,\n      placeholder: \"T\\xEDtulo\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"exampleFormControlInput1\",\n      name: \"ISBN\",\n      onChange: this.onInputChange,\n      value: this.state.ISBN,\n      placeholder: \"ISBN\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: this.onInputChange,\n      id: \"exampleFormControlSelect1\",\n      name: \"autor\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \"Autor/a\"), this.state.autores.map(autor => /*#__PURE__*/React.createElement(\"option\", {\n      key: autor._id,\n      value: autor._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, autor.nombre, \" \", autor.apellido)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: this.onInputChange,\n      id: \"exampleFormControlSelect1\",\n      name: \"genero\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, \"G\\xE9nero\"), this.state.generos.map(ge => /*#__PURE__*/React.createElement(\"option\", {\n      key: ge._id,\n      value: ge._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, ge.nombre)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: this.onInputChange,\n      id: \"exampleFormControlSelect1\",\n      name: \"editorial\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, \"Editorial\"), this.state.editoriales.map(ed => /*#__PURE__*/React.createElement(\"option\", {\n      key: ed.id,\n      value: ed._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, ed.nombre)))), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, \"Portada\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      encType: \"multipart/form-data\",\n      name: \"portadaImg\",\n      onChange: this.getPortada,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, \" Agregar \"))))));\n  }\n\n}\n/*\r\n<label className=\"text-light\">Fecha De Publicacion</label>\r\n            <div className=\"form-group\">\r\n               \r\n                <DatePicker className=\"form-control\"\r\n                 selected={this.state.fechaDePublicacion}\r\n                 name='fechaDePublicacion'\r\n                 onChange={this.onChangeFechaDePublicacion}\r\n                 required/>\r\n            </div>\r\n\r\n            <label className=\"text-light\"> Fecha De ExpiraciÃ³n</label>\r\n            <div className=\"form-group\">\r\n               \r\n                <DatePicker className=\"form-control\"\r\n                    formData=\"dd/mm/yy\"\r\n                 selected={this.state.fechaDeExpiracion}\r\n                 name='fechaDeExpiracion'\r\n                 onChange={this.onChangeFechaDeExpiracion}\r\n                />\r\n            </div>\r\n            */","map":{"version":3,"sources":["D:/Documentos/GitHub/bookflix/bookflix/front-end/src/components/VistaAdmin/Libros/CargarMetadataLibro.js"],"names":["React","Component","DatePicker","axios","autores","generos","editoriales","libros","CargarMetadata","constructor","getData","get","headers","state","token","then","res","setAutores","data","catch","err","console","log","setGeneros","setEditoriales","onSubmit","e","preventDefault","formData","FormData","append","titulo","ISBN","autor","editorial","genero","portadaImg","post","alert","JSON","stringify","response","msg","onInputChange","setState","target","name","value","onChangeFechaDePublicacion","fechaDePublicacion","onChangeFechaDeExpiracion","fechaDeExpiracion","sessionStorage","getItem","getPortada","bind","componentDidMount","files","render","map","_id","nombre","apellido","ge","ed","id"],"mappings":"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","sourcesContent":["import React, { Component } from '../../../../node_modules/react'\r\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport DatePicker from '../../../../node_modules/react-datepicker';\r\nimport '../../../../node_modules/react-datepicker/dist/react-datepicker.css';\r\nimport axios from '../../../../node_modules/axios';\r\n\r\nconst autores = 'http://localhost:4000/api/autores/';\r\nconst generos = 'http://localhost:4000/api/generos/';\r\nconst editoriales = 'http://localhost:4000/api/editoriales/';\r\nconst libros='http://localhost:4000/api/libros/cargar';\r\n\r\n\r\n\r\nexport default class CargarMetadata extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            token: sessionStorage.getItem('token'),\r\n\r\n            titulo: '',\r\n            ISBN:'',\r\n            portadaImg: null,\r\n            autor:'',\r\n            editorial:'',\r\n            genero:'',\r\n            //fechaDeExpiracion: '', \r\n            //fechaDePublicacion: '', \r\n            //fechaDeHoy: new Date(),\r\n    \r\n            generos:[],\r\n            autores:[],\r\n            editoriales:[]\r\n            \r\n        };\r\n      \r\n        this.getPortada=this.getPortada.bind(this);\r\n        this.onChangeFechaDePublicacion=this.onChangeFechaDePublicacion.bind(this);\r\n        this.onChangeFechaDeExpiracion=this.onChangeFechaDeExpiracion.bind(this);\r\n        this.onInputChange=this.onInputChange.bind(this);\r\n        this.setAutores=this.setAutores.bind(this);\r\n        \r\n    }\r\n\r\n    setAutores(res){\r\n        this.setState({\r\n            autores:res\r\n        });\r\n    }\r\n    setGeneros(res){\r\n        this.setState({\r\n            generos:res\r\n        });\r\n    }\r\n    \r\n    setEditoriales(res){   \r\n        this.setState({\r\n            editoriales:res\r\n        });\r\n       \r\n    }\r\n    \r\n    getData = async () => {\r\n        \r\n       \r\n        await axios.get(autores,{\r\n            \r\n            headers:{'xaccess':this.state.token}  \r\n        })\r\n        .then(res =>{\r\n            this.setAutores(res.data)\r\n        })\r\n        .catch(err =>{console.log(err)});\r\n\r\n        await axios.get(generos,{\r\n            \r\n            headers:{'xaccess':this.state.token}  \r\n        })\r\n        .then(res =>{\r\n            this.setGeneros(res.data)\r\n        })\r\n        .catch(err =>{console.log(err)});\r\n\r\n        await axios.get(editoriales,{\r\n            \r\n            headers:{'xaccess': this.state.token}  \r\n        })\r\n        .then(res =>{\r\n            this.setEditoriales(res.data)\r\n        })\r\n        .catch(err =>{console.log(err)});\r\n\r\n\r\n\r\n\r\n      \r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.getData();\r\n  \r\n    }\r\n   \r\n    \r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        /*\r\n        if(this.state.fechaDePublicacion < this.state.fechaDeHoy){\r\n            return alert('La fecha de publicaciÃ³n no debe ser menor a la fecha actual')\r\n        }\r\n        if(this.state.fechaDeExpiracion !=''){\r\n            \r\n            if(this.state.fechaDeExpiracion < this.state.fechaDePublicacion){\r\n                return alert('La fecha de expiracion debe ser mayor a la de publicacion')\r\n                \r\n            }\r\n        }\r\n    */ \r\n        const formData = new FormData();\r\n        formData.append('titulo', this.state.titulo);\r\n        formData.append('isbn',this.state.ISBN);\r\n        formData.append('autor', this.state.autor);\r\n        formData.append('editorial', this.state.editorial);\r\n        formData.append('genero', this.state.genero);\r\n        //formData.append('lanzamiento', this.state.fechaDePublicacion);\r\n        formData.append('portadaImg', this.state.portadaImg); \r\n        //formData.append('expiracion',this.state.fechaDeExpiracion)\r\n    \r\n        axios.post(libros,formData,{\r\n                headers: { 'xaccess':this.state.token }\r\n            })\r\n            .then(res => {\r\n                \r\n                alert(JSON.stringify(res.data));\r\n            })\r\n    \r\n            .catch(err => {\r\n                alert(JSON.stringify(err.response.data.msg))\r\n            } );\r\n    };\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    onChangeFechaDePublicacion = fechaDePublicacion => {\r\n        this.setState({ fechaDePublicacion });\r\n    };\r\n\r\n    onChangeFechaDeExpiracion = fechaDeExpiracion => {\r\n        this.setState({ fechaDeExpiracion });\r\n    };\r\n\r\n    getPortada(e){\r\n        this.setState({\r\n            portadaImg: e.target.files[0]\r\n        })\r\n\r\n    }\r\n     \r\n   \r\n    render(){\r\n        return (\r\n        <div className=\"form-novedad\" >\r\n        \r\n        <div className=\"col-md-6 offset-md-3\">\r\n        <div className=\"card card-body text-light bg-dark\">\r\n       \r\n        <form onSubmit={this.onSubmit} >\r\n            \r\n            <div className=\"form-group\">\r\n               \r\n                <input \r\n                    className=\"form-control\" \r\n                    id=\"exampleFormControlInput1\" \r\n                    name =\"titulo\"\r\n                    onChange={this.onInputChange}\r\n                    value={this.state.titulo}\r\n                    placeholder=\"TÃ­tulo\"\r\n                    required>\r\n                </input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            \r\n                <input \r\n                    className=\"form-control\" \r\n                    id=\"exampleFormControlInput1\" \r\n                    name =\"ISBN\"\r\n                    onChange={this.onInputChange}\r\n                    value={this.state.ISBN}\r\n                    placeholder=\"ISBN\"\r\n                    required>\r\n                </input>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            \r\n                <select className=\"form-control\"   \r\n                    onChange={this.onInputChange} \r\n                    id=\"exampleFormControlSelect1\" \r\n                    name=\"autor\"\r\n                    required>    \r\n                <option selected>Autor/a</option>\r\n                {this.state.autores.map(autor =>\r\n                <option key={autor._id} value={autor._id} >{autor.nombre} {autor.apellido}</option>\r\n                        )}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            \r\n                    <select className=\"form-control\"  onChange={this.onInputChange}  id=\"exampleFormControlSelect1\" name=\"genero\" required>\r\n                    <option selected>GÃ©nero</option>\r\n                        {this.state.generos.map(ge =>\r\n                        <option key={ge._id} value={ge._id} >{ge.nombre}</option>\r\n                        )}\r\n                    </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                \r\n                    <select className=\"form-control\"  onChange={this.onInputChange} id=\"exampleFormControlSelect1\" name=\"editorial\" required>\r\n                    <option selected>Editorial</option>\r\n                    {this.state.editoriales.map(ed =>\r\n                    <option key={ed.id} value={ed._id} >{ed.nombre}</option>\r\n                    )}\r\n                    </select>\r\n            </div>\r\n            \r\n            \r\n\r\n            <label className=\"text-light\">Portada</label>\r\n            <div className=\"form-group\">\r\n\r\n               <input type='file' encType=\"multipart/form-data\" name='portadaImg' onChange={this.getPortada}>\r\n               </input>\r\n                \r\n            </div >\r\n    \r\n            \r\n            <div className=\"form-group\">\r\n                <button type =\"submit\" className=\"btn btn-success\"> Agregar </button>\r\n            </div>\r\n         </form>\r\n         </div>\r\n         </div>   \r\n        \r\n         </div> \r\n\r\n           \r\n        )\r\n    }\r\n}\r\n/*\r\n<label className=\"text-light\">Fecha De Publicacion</label>\r\n            <div className=\"form-group\">\r\n               \r\n                <DatePicker className=\"form-control\"\r\n                 selected={this.state.fechaDePublicacion}\r\n                 name='fechaDePublicacion'\r\n                 onChange={this.onChangeFechaDePublicacion}\r\n                 required/>\r\n            </div>\r\n\r\n            <label className=\"text-light\"> Fecha De ExpiraciÃ³n</label>\r\n            <div className=\"form-group\">\r\n               \r\n                <DatePicker className=\"form-control\"\r\n                    formData=\"dd/mm/yy\"\r\n                 selected={this.state.fechaDeExpiracion}\r\n                 name='fechaDeExpiracion'\r\n                 onChange={this.onChangeFechaDeExpiracion}\r\n                />\r\n            </div>\r\n            */"]},"metadata":{},"sourceType":"module"}